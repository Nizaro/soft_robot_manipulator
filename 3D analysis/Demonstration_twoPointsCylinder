#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Jul 19 14:02:17 2023

@author: leo
"""

import numpy as np
import open3d as o3d
import glob
import copy
from Filtering3D import *

#Data acquisition ============================================================


pcd0 = o3d.io.read_point_cloud('data_23-05-04_14-56-00/pc0.ply')
pcd1=pcd0
pcd1 = filterDATA(pcd0)
pcd2=pcd1
pcd1=pcd1.voxel_down_sample(voxel_size=0.05)
normal_param=o3d.geometry.KDTreeSearchParamRadius(0.05)
pcd1.estimate_normals()


center = pcd1.get_center()
points = np.asarray(pcd1.points)
normals=np.asarray(pcd1.normals)
PN=np.array([points,normals])
PN=np.swapaxes(PN,0,1)
PNL=np.ndarray.tolist(PN)


o3d.visualization.draw_geometries([pcd0])


#input points 
P1=points[1000,:]
P2=points[3000,:]
P3=points[6000,:]
N1=normals[1000,:]
N2=normals[3000,:]
N3=normals[6000,:]
P1N=np.array([P1,N1])
P2N=np.array([P2,N2])
P3N=np.array([P3,N3])
Mymodel.make_model([P1N, P2N, P3N])
D=Mymodel.directionctrlpts_size
C=Mymodel.center
R=Mymodel.radius

linepoints=[P1,P1+N1/10,P2,P2+N2/10]

line=[[0,1],[2,3]]
line_set = o3d.geometry.LineSet()
line_set.points = o3d.utility.Vector3dVector(linepoints)
line_set.lines = o3d.utility.Vector2iVector(line)

pcd3=o3d.geometry.PointCloud()
pcd3.points = o3d.utility.Vector3dVector([P1,P2,P3])
pcd3.paint_uniform_color([0,1,0])
alpha=np.arccos(np.dot(D,[0,0,1]))
 
r=np.cross(D,np.array([0,0,1]))/np.linalg.norm(np.cross(D,np.array([0,0,1]))) 
Rot=rot.from_rotvec(alpha*r)
Rinv=Rot.inv()


Cylinder=o3d.geometry.TriangleMesh.create_cylinder(radius=R, height=0.5)
Cylinder=Cylinder.rotate(Rinv.as_matrix())
Cylinder=Cylinder.translate(C)

Cylinder=o3d.geometry.LineSet.create_from_triangle_mesh(Cylinder)
o3d.visualization.draw_geometries([Cylinder,pcd3,line_set])

